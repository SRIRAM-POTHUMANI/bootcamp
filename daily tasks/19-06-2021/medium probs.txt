// Problem:

// Write a function called “addFive”.
// Given a number, “addFive” returns 5 added to that number.

// Input:

addFive(5);
addFive(0);
addFive(-5);

// Output:

// 10
// 5
// 0

var num = 10;function addFive(num) { 
console.log(num + 5);
}

// Problem:

// Write a function called “getOpposite”.
// Given a number, return its opposite

// Input:
getOpposite(5);
getOpposite(0);
getOpposite(-5);
getOpposite('5a');
getOpposite(5.5);


// Output:

//    -5
//    0
//    5
//    -1
//    -1

function getOpposite(num1) {
   if(Number.isInteger(num1))
   {
      console.log(-num1)
   }
   else if(Number(num1) === num1 && num1 % 1 !== 0)
   {
      num1= -1;
      console.log(num1);
   }
   else
   {
      num1= -1;
      console.log(num1);
   }
}
   
// Problem:

// Fill in your code that takes an number minutes and converts it to seconds.

// Examples
// toSeconds(5) ➞ 300

// toSeconds(3) ➞ 180

// toSeconds(2) ➞ 120

var min = 5;
function toSeconds() {
 return secs=min * 60;
}var secs = toSeconds(min);
console.log(secs)


// Problem
// Create a function that takes a string and returns it as an integer.

// Examples
// toInteger(“6”) ➞ 6

// toInteger(“1000”) ➞ 1000

// toInteger(“12”) ➞ 12

var mystr = "1000";
function toInteger(mystr) {
   return myint=parseInt(mystr)
}var myint = toInteger(mystr)
console.log(myint);

// Problem

// Create a function that takes a number as an argument, increments the number by +1 and returns the result.

// Examples
// nextNumber(0) ➞ 1

// nextNumber(9) ➞ 10

// nextNumber(-3) ➞ -2

var myint1 = -3;
function nextNumber(myint) {
return myint1 = myint1 + 1;
}var myNextint = nextNumber(myint1)
console.log(myint1);

// Problem

// Create a function that takes an array and returns the first element.

// Examples
// getFirstElement([1, 2, 3]) ➞ 1

// getFirstElement([80, 5, 100]) ➞ 80

// getFirstElement([-500, 0, 50]) ➞ -500

var arr = [10, 11, 13];
function getFirstElement(arr) {
   return result = arr[0];
}var data = getFirstElement(arr)
console.log(result)


// Problem

// Convert Hours into Seconds

// Write a function that converts hours into seconds.

// Examples
// hourToSeconds(2) ➞ 7200

// hourToSeconds(10) ➞ 36000

// hourToSeconds(24) ➞ 86400

var hour=24;
function hourToSeconds(hour) {
   return result=hour * 3600;
}var data = hourToSeconds(hour)
console.log(result)

// Problem

// Find the Perimeter of a Rectangle
// Create a function that takes height and width and finds the perimeter of a rectangle.

// Examples
// findPerimeter(6, 7) ➞ 26

// findPerimeter(20, 10) ➞ 60

// findPerimeter(2, 9) ➞ 22

function findPerimeter(num1,num2) {
   return result = 2 * (num1 + num2);
}var peri = findPerimeter(20,10)
console.log(result)


// Problem

// Less Than 100?
// Given two numbers, return true if the sum of both numbers is less than 100. Otherwise return false.

// Examples
// lessThan100(22, 15) ➞ true
// // 22 + 15 = 37

// lessThan100(83, 34) ➞ false
// // 83 + 34 = 117

function lessThan100(num1,num2) {
   let adding= num1 + num2;
   if(adding < 100)
   {console.log("True")
}else {
   console.log("False")
}
}var res = lessThan100(122,15)

// Problem

// There is a single operator in JavaScript, capable of providing the remainder of a division operation. Two numbers are passed as parameters. The first parameter divided by the second parameter will have a remainder, possibly zero. Return that value.

// Examples
// remainder(1, 3) ➞ 1

// remainder(3, 4) ➞ 3

// remainder(-9, 45) ➞ -9

// remainder(5, 5) ➞ 0

function remainder(num1,num2) {
   return remainder=num1 % num2;
}var res = remainder(5,5)
console.log(remainder)

// Problem

// Old macdonald had a farm:

// MacDonald is asking you to tell him how many legs can be counted among all his animals. The farmer breeds three species:

// turkey = 2 legs
// horse = 4 legs
// pigs = 4 legs

// The farmer has counted his animals and he gives you a subtotal for each species. You have to implement a function that returns the total number of legs of all the animals.

// Examples
// CountAnimals(2, 3, 5) ➞ 36

// CountAnimals(1, 2, 3) ➞ 22

// CountAnimals(5, 2, 8) ➞ 50

function CountAnimals(tur,horse,pigs) {
   return result= (tur * 2) + (horse * 4) + (pigs * 4);
}var legs = CountAnimals(5,2,8)
console.log(result)

// Problem

// Frames Per Second
// Create a function that returns the number of frames shown in a given number of minutes for a certain FPS.

// Examples
// frames(1, 1) ➞ 60

// frames(10, 1) ➞ 600

// frames(10, 25) ➞ 15000

function frames(num1,num2) {
   return result = (num1 * 60) * num2;
}var fps = frames(10,25)
console.log(result);

// Problem

// Check if an Integer is Divisible By Five
// Create a function that returns true if an integer is evenly divisible by 5, and false otherwise.

// Examples
// divisibleByFive(5) ➞ true

// divisibleByFive(-55) ➞ true

// divisibleByFive(37) ➞ false

function divisibleByFive(num1) {
   if(num1 % 5 == 0 )
   {
      console.log("True")
   }
   else{
      console.log("False")
   }
}var divisible = divisibleByFive(56)

// Problem:

// Write a function called “isEven”.
// Given a number, “isEven” returns whether it is even.

// Input:
// isEven(12);
// isEven(0);
// isEven(11);
// isEven(“11h”);

// Output:

// true
// true
// false
// -1


function isEven(num1){
   if(Number.isInteger(num1))
   {
      if(num1 % 2 == 0)
      {
         console.log("True")
      }
      else{
         console.log("False")
      }
      
   }
   else
   {
      num1= -1;
      console.log(num1);
   }
}var even = isEven("11h")

// Problem:
// Write a function called “areBothOdd”.
// Given 2 numbers, “areBothOdd” returns whether or not both of the given numbers are odd.

// Input:
// areBothOdd(1, 3);
// areBothOdd(1, 4);
// areBothOdd(2, 3);
// areBothOdd(0, 0);

// Output:

// true
// flase
// flase
// flase


function areBothOdd(num1, num2){
   if(num1 % 2 != 0 && num2 % 2 != 0)
   {
      console.log("True")
   }
   else{
      console.log("False")
   }
}areBothOdd(3,1)


// Problem:
// Write a function called “getFullName”.
// Given a first and a last name, “getFullName” returns a single string with the given first and last names separated by a single space.

// Input:

// getFullName(“GUVI”, “GEEK”);
// getFullName(“GUVI”, );
// getFullName(, “GEEK”);
// getFullName(“”, “”);

// Output:

// “GUVI GEEK”
// “GUVI”
// “GEEK”
// “”


function getFullName(firstName ="", lastName =""){
console.log(firstName + " " + lastName);
}getFullName("SRIRAM","POTHUMANI")


// Problem:
// Write a function called “getLengthOfWord”.
// Given a word, “getLengthOfWord” returns the length of the given word.
// Input:

// getLengthOfWord(“GUVI”);
// getLengthOfWord(“”);
// getLengthOfWord();
// getLengthOfWord(9);

// Output:

// 4
// 0
// -1
// -1

function getLengthOfWord(word1){
   if(Number.isInteger(word1))
   {
      word1= -1;
      console.log(word1);
   }
   else
   {
      console.log(word1.length)
   }
}getLengthOfWord("WORLD")

// Problem:
// Write a function called “isSameLength”.
// Given two words, “isSameLength” returns whether the given words have the same length.
// Input:
// isSameLength(“GUVI”, “GEEK”);
// Output:
// true


function isSameLength(word1, word2){
   if(word1.length == word2.length)
   {
      console.log("True")
   }
   else{
      console.log("False")
   }
}isSameLength("hello","world")


// Problem:

// Create a function to calculate the distance between two points defined by their x, y coordinates

console.log(getDistance(100, 100, 400, 300));
function getDistance(x1, y1, x2, y2)
{
 return result =   Math.sqrt(Math.pow(x2 - x1, 2) +  Math.pow(y2 - y1, 2) * 1.0);
}

// Problem:

// Write a function called “getNthElement”.
// Given an array and an integer, “getNthElement” returns the element at the given integer, within the given array. If the array has a length of 0, it should return ‘undefined’.
// Input:
// getNthElement([1, 3, 5], 1);
// Output:
// 3

function getNthElement(array1,n){
   if(array1.length ==0)
   {
      console.log("undefined")
   }
   else{
      console.log(array1[n])

   }


}getNthElement([1,2,3],2)

// Problem:

// Write a function called “getLastElement”.
// Given an array, “getLastElement” returns the last element of the given array. If the given array has a length of 0, it should return ‘-1’.
// Input:
// getLastElement([1, 2, 3, 4]);
// Output:
// 4


function getLastElement(array1){
console.log(array1[array1.length -1])
}getLastElement([1,2,3,4])

